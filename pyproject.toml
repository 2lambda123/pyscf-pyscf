[build-system]
requires = ["scikit-build-core"]
build-backend = "scikit_build_core.build"


[project]
name = "pyscf"
dynamic = ["version"]
description = "PySCF: Python-based Simulations of Chemistry Framework"
classifiers = [
  'Development Status :: 5 - Production/Stable',
  'Intended Audience :: Science/Research',
  'Intended Audience :: Developers',
  'License :: OSI Approved :: Apache Software License',
  'Programming Language :: C',
  'Programming Language :: Python',
  'Programming Language :: Python :: 3.7',
  'Programming Language :: Python :: 3.8',
  'Programming Language :: Python :: 3.9',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
  'Programming Language :: Python :: 3.12',
  'Topic :: Software Development',
  'Topic :: Scientific/Engineering',
  'Operating System :: POSIX',
  'Operating System :: Unix',
  'Operating System :: MacOS',
]

maintainers = [{ name = "Qiming Sun", email = "osirpt.sun@gmail.com" }]

authors = [{ name = "Qiming Sun", email = "osirpt.sun@gmail.com" }]

license = { file = "LICENSE" }

dependencies = [
  'numpy>=1.13,!=1.16,!=1.17',
  'scipy!=1.5.0,!=1.5.1',
  'h5py>=2.7',
  'setuptools',
]

[project.urls]
Homepage = "http://www.pyscf.org"
Repository = "https://github.com/pyscf/pyscf"
Documentation = "http://www.pyscf.org"

[project.optional-dependencies]

geomopt = ["pyberny>=0.6.2", "geometric>=0.9.7.2", "pyscf-qsdopt"]
doci = ["pyscf-doci"]
properties = ["pyscf-properties"]
semiempirical = ['pyscf-semiempirical']
cppe = ["cppe"]
pyqmc = ["pyqmc"]
mcfun = ["mcfun>=0.2.1"]
bse = ["basis-set-exchange"]

all = ["pyscf[geomopt,doci,properties,semiempirical,cppe,pyqmc,mcfun,bse]"]

# extras which should not be installed by "all" components
cornell_shci = ["pyscf-cornell-shci"]
nao = ["pyscf-nao"]
fciqmcscf = ["pyscf-fciqmc"]
tblis = ["pyscf-tblis"]
icmpspt = ["pyscf-icmpspt"] # broken
shciscf = ["pyscf-shciscf"] # broken

[tool.scikit-build]
cmake.source-dir = "pyscf/lib"
cmake.verbose = true
logging.level = "DEBUG"
wheel.install-dir = "pyscf"
wheel.py-api = "py3"

[tool.scikit-build.metadata.version]
provider = "scikit_build_core.metadata.regex"
input = "pyscf/_version.py"