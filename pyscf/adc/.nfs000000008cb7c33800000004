#INFO: **** input file is /home/ahmed.796/Programming/pyscf/pyscf/adc/cvs_batch_radc.py ****
#!/usr/bin/env python
from pyscf import gto, scf, adc
import numpy as np
#import open_closed_shell_geometries as geom
from basis_sets_augpwcxvz import basis_set_augccpwcxvz as not_x2c_basis
import contextlib
from multiprocessing import Process, Queue
import pandas as pd
import os
from cfour_basis_x2c import convert_cfour2nwchem_basis as gen_basis_func
from geometries_consolidated import mol_geom_spin as molecules_dict
import sys
import time
import psutil
import basis_set_exchange as bse 
import csv
from psi4_6z_basis import basis_6z
from basis_36e import basis_36e_dict

def mf_adc_execute(molecule_name, coord_spin_atoms, basis_type='tz', adc_nlevel='adc(2)', ncvs=1, npick=[0,1], edge='1s' ,cvs_type='cce', nfc=0):

    # Pulling geometry and spins of molecules from an external file
     
    # Mean-field calculation 
    mol = gto.Mole()
    mol.atom = coord_spin_atoms[0]
    mol_basis = {}
    for atom in coord_spin_atoms[2]:
        if atom == 'H':
            fetch_basis = bse.get_basis(f'cc-pv{basis_type}', elements=[atom], fmt='nwchem')
        elif atom != 'H': 
            fetch_basis = basis_36e_dict[f'{atom}_{basis_type}']
        parsed_basis = gto.basis.parse(fetch_basis)
        mol_basis[f'{atom}'] = gto.uncontract(parsed_basis)
        #mol_basis[f'{atom}'] = parsed_basis
   
    #mol.basis = mol_basis
    mol.basis = 'sto-3g'
    mol.verbose = 4
    mol.symmetry = True
    #mol.spin  = coord_spin_atoms[1]
    mol.build()
    
    mf = scf.UHF(mol)#.density_fit()
    
    mf.conv_tol = 1e-12
    mf.kernel()
    #mf = scf.addons.remove_linear_dep_(mf, threshold=1e-10)
    mf.analyze()
    mf.stability(external = True)

   
    # Input ADC parameters
    myadc = adc.ADC(mf)#.density_fit(mol_basis_ri)
    myadc.verbose = 7
    myadc.method_type = "ip"
    myadc.method = adc_nlevel
    myadc.max_cycle = 1000
    myadc.conv_tol = 1e-12
    myadc.max_space = 5000
    myadc.ncore_proj = ncvs 
    #myadc.ncore_proj = ncvs 
    myadc.cvs_type = cvs_type
    myadc.nfc_orb = nfc 
    myadc.cvs_npick = npick
    #myadc.cvs_edge = edge
    
    # Executing ADC function. Output is a dictionary of results of interest
    out_dic = myadc.kernel(nroots= 2)
    print('out dic DEBUG: ', out_dic)
    # Storing output dictionary is a csv file
    molecule_name_split = molecule_name.split('_')[0]
    if len(adc_nlevel) == 6:
        adc_nlevel = adc_nlevel.replace('(','').replace(')','')
    if len(adc_nlevel) > 6:
        adc_nlevel = adc_nlevel.replace('(','').replace(')','').replace('-','')

    out_dic.update({'molecule_name': molecule_name_split, 'adc_level':adc_nlevel,'basis':basis_type, 'cvs_type':cvs_type, 'num_frozen_core': nfc, 'edge':edge, 'e_SCF':mf.e_tot, 'SCF_conv_bool':mf.converged}) 
 
    dirpath = f'vve_mom_out_batch_36e/radc_test/csv/{adc_nlevel}/{edge}'
    if not os.path.exists(dirpath):
        os.makedirs(dirpath)
    
    filename = f'{molecule_name}_{adc_nlevel}_{cvs_type}_{basis_type}_nfc{nfc}.csv'
    file_path = os.path.join(dirpath, filename)

    pd.DataFrame.from_dict(data=out_dic, orient='index').to_csv(file_path)
    return out_dic


#process = psutil.Process(os.getpid())
#print(process.memory_info().rss/1024)
#mem_thresh = 3.2e8
#def check_mem():
#    process = psutil.Process(os.getpid())
#    return process.memory_info().rss/1024
#mem_avail = check_mem()
#while mem_avail < mem_thresh:
#    time.sleep(90)

#max_ram_percent_usage = 80
#if psutil.virtual_memory()[2] > max_ram_percent_usage:
#    time.sleep(90)
#else:


#for adc_nlevel in ['adc(2)-x']:
#    for basis_type in ['qz','5z']:#,'qz']:# '5z']:
#        for molecule_key, molecule_info in molecules_dict.items():
#            for atom_edge_key, atom_edge_value in molecule_info[3].items():
#                edge = atom_edge_key[-2:]
#                for ncvs, npick in atom_edge_value.items():
#                    ncvs = int(ncvs)
#                    for cvs_type, nfc, oneshot_cvs_bool, oneshot_novve_bool in [('cve',0,True,False), ('cve',ncvs,True,False),('cce',0,False,True)]: 
#                    #for cvs_type, nfc in [('cce',0)]:# ('cve',0), ('cve',ncvs)]: 
#                        # Storing full output file
#                        if molecule_key != 'Zn' and basis_type != '6z':
#                            if len(adc_nlevel) == 6:
#                                adc_nlevel_str = adc_nlevel.replace('(','').replace(')','')
#                            if len(adc_nlevel) > 6:
#                                adc_nlevel_str = adc_nlevel.replace('(','').replace(')','').replace('-','')
#                            dirpath = f'vve_mom_out_batch_36e/contracted_CXZ/dat/{adc_nlevel_str}/{edge}'
#                            if not os.path.exists(dirpath):
#                                os.makedirs(dirpath)
#                            molecule_atom_edge = f'{molecule_key}_{atom_edge_key}'
#                            
#                            filename = f'{molecule_atom_edge}_{adc_nlevel_str}_{cvs_type}_{basis_type}_nfc{nfc}.dat'
#                            file_path = os.path.join(dirpath, filename)
#                            with open(file_path, 'w') as f:
#                                # This function grabs the the standard output and stores in a file. This is not ideal as all exit
#                                # statements becomes suppressed in terminal
#                                with contextlib.redirect_stdout(f):
#                                    p = Process(target=mf_adc_execute, args=[molecule_atom_edge, molecule_info, basis_type, adc_nlevel, ncvs, npick, edge, cvs_type, nfc, oneshot_cvs_bool, oneshot_novve_bool])
#                                    p.start()
#                                    print('START of error message ########')
#                                    print(sys.stderr)
#                                    print('######## END of error message ##########')
#                            if basis_type == 'tz':
#                                time.sleep(15)
#                            if basis_type == 'qz':
#                                time.sleep(30)
#                            if basis_type == '5z':
#                                time.sleep(60)
#                            if basis_type == '6z':
#                                time.sleep(120)
#                            while psutil.virtual_memory()[2] > max_ram_percent_usage:
#                                time.sleep(90)

mol_name = 'GaH3'    
molecule_info = molecules_dict[mol_name]
for atom_edge_key, atom_edge_value in molecule_info[3].items():
   for ncvs, npick in atom_edge_value.items():
       edge = atom_edge_key[-2:]
       if edge == '3p':
           cvs_type_list = [['cve',0,True,False]]#,['cve',ncvs,True,False],['cce',0,False,True]]    
           for cvs_type, nfc, oneshot_cvs_bool,oneshot_no_vve_bool in cvs_type_list:
               mf_adc_execute(mol_name, molecule_info, 'tz', 'adc(2)', int(ncvs), npick, atom_edge_key[-2:], cvs_type=cvs_type, nfc=int(nfc)) 


#calc_list = []
#with open('calcs_todo_vveadc2x.csv', 'r') as incomp_calc:
#    csv_reader = csv.reader(incomp_calc)
#    for calc_csv in csv_reader:
#        calc_list += [calc_csv]

#mem_max = 3.2e8
#for calc in calc_list:
#    #mem_avail = check_mem()
#    #while mem_avail > mem_max:
#    #    time.sleep(90)
#    
#    for adc_nlevel in ['adc(2)-x']:
#            for atom_edge_key, atom_edge_value in molecules_dict[calc[0]][3].items():
#                molecule_info = molecules_dict[calc[0]]
#                if atom_edge_key[-2:] == calc[4]:
#                    for ncvs, npick in atom_edge_value.items():
#                        ncvs = int(ncvs)
#                        cvs_type = calc[2]
#                        basis_type = calc[1]
#                        nfc = int(calc[3])
#                        edge = calc[4]
#                        #for cvs_type, nfc in [('cce',0)]:# ('cve',0), ('cve',ncvs)]: 
#                        # Storing full output file
#                        if len(adc_nlevel) == 6:
#                            adc_nlevel_str = adc_nlevel.replace('(','').replace(')','')
#                        if len(adc_nlevel) > 6:
#                            adc_nlevel_str = adc_nlevel.replace('(','').replace(')','').replace('-','')
#                        dirpath = f'vve_mom_out_batch_18e/missing_v4/dat/{adc_nlevel_str}/{edge}'
#                        if not os.path.exists(dirpath):
#                            os.makedirs(dirpath)
#                        molecule_atom_edge = f'{calc[0]}_{atom_edge_key}'
#                        
#                        filename = f'{molecule_atom_edge}_{adc_nlevel_str}_{cvs_type}_{basis_type}_nfc{nfc}.dat'
#                        file_path = os.path.join(dirpath, filename)
#                        with open(file_path, 'w') as f:
#                            # This function grabs the the standard output and stores in a file. This is not ideal as all exit
#                            # statements becomes suppressed in terminal
#                           with contextlib.redirect_stdout(f):
#                               p = Process(target=mf_adc_execute, args=[molecule_atom_edge, molecule_info, basis_type, adc_nlevel, ncvs, npick, edge, cvs_type, nfc])
#                               p.start()
#                        #time.sleep(300)
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='cbc-nc206139.asc.ohio-state.edu', release='3.10.0-1160.59.1.el7.x86_64', version='#1 SMP Wed Feb 16 12:17:35 UTC 2022', machine='x86_64', processor='x86_64')  Threads 24
Python 3.8.10 (default, Jun  4 2021, 15:09:15) 
[GCC 7.5.0]
numpy 1.20.2  scipy 1.6.2
Date: Sun Apr 10 12:59:24 2022
PySCF version 1.7.4
PySCF path  /home/ahmed.796/Programming/pyscf_secondary/pyscf
GIT ORIG_HEAD 4f2a7961a4fc6670237955e93decca9eac76266a
GIT HEAD      ref: refs/heads/cap_mom_cvs
GIT cap_mom_cvs branch  9669768b14cdbeb153ad1aa810f28143ba4540a9

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 4
[INPUT] num. electrons = 34
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry True subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 Ga     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      1.552376161000   0.000000000000   0.001000000000 AA    2.933565786594   0.000000000000   0.001889726125 Bohr
[INPUT]  3 H     -0.776188080500  -1.344397191600   0.000000000000 AA   -1.466782893297  -2.540542494758   0.000000000000 Bohr
[INPUT]  4 H     -0.776188080500   1.344397191600   0.000000000000 AA   -1.466782893297   2.540542494758   0.000000000000 Bohr

nuclear repulsion = 32.2924560719608
point group symmetry = C3v, use subgroup Cs
num. orbitals of irrep A' = 15
num. orbitals of irrep A" = 6
number of shells = 11
number of NR pGTOs = 63
number of NR cGTOs = 21
basis = sto-3g
ecp = {}
CPU time:         2.08


******** <class 'pyscf.scf.uhf_symm.SymAdaptedUHF'> ********
method = SymAdaptedUHF-UHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-12
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /scratch/local/tmpnes31kki
max_memory 4000 MB (current use 114 MB)
number electrons alpha = 17  beta = 17
Freeze 0 electrons in irreps []
    34 free electrons in irreps A' A"
Set gradient conv threshold to 1e-06
init E= -1899.69793193493
alpha HOMO (A") = -0.611576141142376  LUMO (A') = -0.250743448738523
beta  HOMO (A") = -0.591742432329371  LUMO (A') = -0.248116022172514
cycle= 1 E= -1902.51289255004  delta_E= -2.81  |g|= 0.251  |ddm|= 1.41
alpha HOMO (A") = -0.0710491543107758  LUMO (A') = 0.202738452639568
beta  HOMO (A") = -0.0717597226322039  LUMO (A') = 0.202470096493821
cycle= 2 E= -1902.57700963951  delta_E= -0.0641  |g|= 0.0388  |ddm|= 0.627
alpha HOMO (A') = -0.235173358850393  LUMO (A') = 0.169939329718428
beta  HOMO (A') = -0.236718306431919  LUMO (A') = 0.17002440912231
cycle= 3 E= -1902.57855779333  delta_E= -0.00155  |g|= 0.0119  |ddm|= 0.0853
alpha HOMO (A') = -0.257325223867046  LUMO (A') = 0.167327838170838
beta  HOMO (A') = -0.258160466773853  LUMO (A') = 0.16740202045574
cycle= 4 E= -1902.57871186416  delta_E= -0.000154  |g|= 0.000885  |ddm|= 0.0337
alpha HOMO (A') = -0.257975412144388  LUMO (A') = 0.167411913890708
beta  HOMO (A') = -0.258430647420042  LUMO (A') = 0.167440032151048
cycle= 5 E= -1902.57871360883  delta_E= -1.74e-06  |g|= 0.000463  |ddm|= 0.00349
alpha HOMO (A') = -0.258305354436278  LUMO (A') = 0.167405721095693
beta  HOMO (A') = -0.25841125966059  LUMO (A') = 0.167394663057046
cycle= 6 E= -1902.57871431237  delta_E= -7.04e-07  |g|= 0.000148  |ddm|= 0.00308
alpha HOMO (A') = -0.258369850333017  LUMO (A') = 0.167399718981661
beta  HOMO (A') = -0.258364271741541  LUMO (A') = 0.167384086541258
cycle= 7 E= -1902.57871438979  delta_E= -7.74e-08  |g|= 5.48e-05  |ddm|= 0.00117
alpha HOMO (A') = -0.258327635752207  LUMO (A') = 0.167399865877767
beta  HOMO (A') = -0.258324704130665  LUMO (A') = 0.167396790726811
cycle= 8 E= -1902.57871440194  delta_E= -1.22e-08  |g|= 2.39e-05  |ddm|= 0.000476
alpha HOMO (A') = -0.258335478899939  LUMO (A') = 0.167399093761419
beta  HOMO (A') = -0.258333889301942  LUMO (A') = 0.167397417282716
cycle= 9 E= -1902.57871440345  delta_E= -1.51e-09  |g|= 1.48e-05  |ddm|= 8.29e-05
alpha HOMO (A') = -0.258341573836323  LUMO (A') = 0.167397015420573
beta  HOMO (A') = -0.258341277657202  LUMO (A') = 0.167396668544587
cycle= 10 E= -1902.57871440503  delta_E= -1.59e-09  |g|= 1.38e-05  |ddm|= 8.83e-05
alpha HOMO (A') = -0.258341573501143  LUMO (A') = 0.167395945265355
beta  HOMO (A') = -0.258342954204608  LUMO (A') = 0.16739750720834
cycle= 11 E= -1902.57871441097  delta_E= -5.94e-09  |g|= 1.21e-05  |ddm|= 0.00037
alpha HOMO (A') = -0.258341012346546  LUMO (A') = 0.167396019644015
beta  HOMO (A') = -0.258342371337909  LUMO (A') = 0.167397899533588
cycle= 12 E= -1902.57871441742  delta_E= -6.46e-09  |g|= 9.85e-06  |ddm|= 0.000503
alpha HOMO (A') = -0.258342322905849  LUMO (A') = 0.167397033643062
beta  HOMO (A') = -0.258341777854136  LUMO (A') = 0.167397146368264
cycle= 13 E= -1902.5787144254  delta_E= -7.97e-09  |g|= 3.8e-06  |ddm|= 0.00126
alpha HOMO (A') = -0.258342596938774  LUMO (A') = 0.167396984469962
beta  HOMO (A') = -0.258342239953269  LUMO (A') = 0.1673970592939
cycle= 14 E= -1902.57871442547  delta_E= -7.89e-11  |g|= 3.95e-06  |ddm|= 2.17e-05
alpha HOMO (A') = -0.258343458370056  LUMO (A') = 0.167396493466702
beta  HOMO (A') = -0.258342419400431  LUMO (A') = 0.167396766121873
cycle= 15 E= -1902.57871442518  delta_E= 2.91e-10  |g|= 2.55e-06  |ddm|= 0.000104
alpha HOMO (A') = -0.258342948196453  LUMO (A') = 0.16739694164529
beta  HOMO (A') = -0.258341997814138  LUMO (A') = 0.167397106717078
cycle= 16 E= -1902.57871442508  delta_E= 9.96e-11  |g|= 1.21e-06  |ddm|= 0.000104
alpha HOMO (A') = -0.258343156939766  LUMO (A') = 0.16739695681234
beta  HOMO (A') = -0.25834284098503  LUMO (A') = 0.167397011610932
cycle= 17 E= -1902.57871442508  delta_E= 2.73e-12  |g|= 4.6e-07  |ddm|= 2.33e-05
alpha HOMO (A') = -0.258342677311649  LUMO (A') = 0.167397037208579
beta  HOMO (A') = -0.258342686271886  LUMO (A') = 0.167397030813981
cycle= 18 E= -1902.57871442508  delta_E= -2.05e-12  |g|= 6.66e-08  |ddm|= 6.27e-06
alpha HOMO (A') = -0.258342690192247  LUMO (A') = 0.167397022793477
beta  HOMO (A') = -0.258342709242004  LUMO (A') = 0.16739701776756
cycle= 19 E= -1902.57871442508  delta_E= -4.55e-13  |g|= 3.8e-08  |ddm|= 2.99e-07
alpha HOMO (A') = -0.258342688000639  LUMO (A') = 0.167397021624783
beta  HOMO (A') = -0.258342700875241  LUMO (A') = 0.167397017679833
Extra cycle  E= -1902.57871442508  delta_E= -2.27e-13  |g|= 2.52e-08  |ddm|= 1.16e-07
converged SCF energy = -1902.57871442508  <S^2> = 2.1316282e-14  2S+1 = 1
**** SCF Summaries ****
Total Energy =                       -1902.578714425084399
Nuclear Repulsion Energy =              32.292456071960800
One-electron Energy =                -2736.093020192188760
Two-electron Energy =                  801.221849695143646
Wave-function symmetry = A'
alpha occupancy for each irrep:     A'   A"
                                    12    5
beta  occupancy for each irrep:     A'   A"
                                    12    5
**** MO energy ****
alpha MO #1 (A' #1), energy= -374.559050580981 occ= 1
alpha MO #2 (A' #2), energy= -46.6308032502582 occ= 1
alpha MO #3 (A' #3), energy= -41.8514567363754 occ= 1
alpha MO #4 (A' #4), energy= -41.8474592091434 occ= 1
alpha MO #5 (A" #1), energy= -41.8474592075344 occ= 1
alpha MO #6 (A' #5), energy= -5.7366479980134 occ= 1
alpha MO #7 (A' #6), energy= -3.88627889493636 occ= 1
alpha MO #8 (A' #7), energy= -3.87880623599688 occ= 1
alpha MO #9 (A" #2), energy= -3.87880623331485 occ= 1
alpha MO #10 (A' #8), energy= -0.546542903639872 occ= 1
alpha MO #11 (A' #9), energy= -0.394835914279181 occ= 1
alpha MO #12 (A" #3), energy= -0.394835890833929 occ= 1
alpha MO #13 (A' #10), energy= -0.293260717762276 occ= 1
alpha MO #14 (A" #4), energy= -0.293260713345241 occ= 1
alpha MO #15 (A' #11), energy= -0.26847055162139 occ= 1
alpha MO #16 (A" #5), energy= -0.258342693552762 occ= 1
alpha MO #17 (A' #12), energy= -0.258342688000639 occ= 1
alpha MO #18 (A' #13), energy= 0.167397021624783 occ= 0
alpha MO #19 (A' #14), energy= 0.451528860554773 occ= 0
alpha MO #20 (A" #6), energy= 0.588151030143538 occ= 0
alpha MO #21 (A' #15), energy= 0.58815110402597 occ= 0
beta  MO #1 (A' #1), energy= -374.559050581294 occ= 1
beta  MO #2 (A' #2), energy= -46.6308032542233 occ= 1
beta  MO #3 (A' #3), energy= -41.8514567414576 occ= 1
beta  MO #4 (A' #4), energy= -41.847459212571 occ= 1
beta  MO #5 (A" #1), energy= -41.8474592109619 occ= 1
beta  MO #6 (A' #5), energy= -5.7366480117086 occ= 1
beta  MO #7 (A' #6), energy= -3.88627892241412 occ= 1
beta  MO #8 (A' #7), energy= -3.87880624694653 occ= 1
beta  MO #9 (A" #2), energy= -3.87880624426403 occ= 1
beta  MO #10 (A' #8), energy= -0.546542897710719 occ= 1
beta  MO #11 (A' #9), energy= -0.394835894900713 occ= 1
beta  MO #12 (A" #3), energy= -0.39483587145757 occ= 1
beta  MO #13 (A' #10), energy= -0.293260724202026 occ= 1
beta  MO #14 (A" #4), energy= -0.293260719785125 occ= 1
beta  MO #15 (A' #11), energy= -0.268470631437948 occ= 1
beta  MO #16 (A" #5), energy= -0.25834270642717 occ= 1
beta  MO #17 (A' #12), energy= -0.258342700875241 occ= 1
beta  MO #18 (A' #13), energy= 0.167397017679833 occ= 0
beta  MO #19 (A' #14), energy= 0.451528871860303 occ= 0
beta  MO #20 (A" #6), energy= 0.588151040139588 occ= 0
beta  MO #21 (A' #15), energy= 0.588151114023685 occ= 0
 ** Mulliken pop alpha/beta on meta-lowdin orthogonal AOs **
 ** Mulliken pop       alpha | beta **
pop of  0 Ga 1s        1.00000 | 1.00000   
pop of  0 Ga 2s        1.00000 | 1.00000   
pop of  0 Ga 3s        0.99955 | 0.99955   
pop of  0 Ga 4s        0.57826 | 0.57826   
pop of  0 Ga 2px       1.00000 | 1.00000   
pop of  0 Ga 2py       1.00000 | 1.00000   
pop of  0 Ga 2pz       1.00000 | 1.00000   
pop of  0 Ga 3px       0.99953 | 0.99953   
pop of  0 Ga 3py       0.99953 | 0.99953   
pop of  0 Ga 3pz       0.99940 | 0.99940   
pop of  0 Ga 4px       0.44924 | 0.44924   
pop of  0 Ga 4py       0.44924 | 0.44924   
pop of  0 Ga 4pz       0.00060 | 0.00060   
pop of  0 Ga 3dxy      0.96686 | 0.96686   
pop of  0 Ga 3dyz      1.00000 | 1.00000   
pop of  0 Ga 3dz^2     0.95726 | 0.95726   
pop of  0 Ga 3dxz      1.00000 | 1.00000   
pop of  0 Ga 3dx2-y2    0.96686 | 0.96686   
pop of  1 H 1s        0.54456 | 0.54456   
pop of  2 H 1s        0.54456 | 0.54456   
pop of  3 H 1s        0.54456 | 0.54456   
In total            17.00000 | 17.00000  
 ** Mulliken atomic charges   ( Nelec_alpha | Nelec_beta ) **
charge of  0Ga =      0.26734  (    15.36633     15.36633 )
charge of  1H =     -0.08911  (     0.54456      0.54456 )
charge of  2H =     -0.08911  (     0.54456      0.54456 )
charge of  3H =     -0.08911  (     0.54456      0.54456 )
Dipole moment(X, Y, Z, Debye): -0.00000, -0.00000,  0.00176
UHF/UKS wavefunction has an internal instability.
UHF/UKS wavefunction has a real -> complex instability
UHF/UKS wavefunction has an UHF/UKS -> GHF/GKS instability.

******** <class 'pyscf.adc.uadc.UADC'> ********
max_memory 4000 MB (current use 131 MB)
    CPU time for ADC integral transformation      0.39 sec, wall time      0.02 sec
    CPU time for Completed t2_1 amplitude calculation      0.01 sec, wall time      0.00 sec
    CPU time for Completed t1_2 amplitude calculation      0.09 sec, wall time      0.00 sec
    CPU time for Completed t2_2 amplitude calculation      0.00 sec, wall time      0.00 sec
    CPU time for Completed amplitude calculation      0.00 sec, wall time      0.00 sec
    CPU time for Completed amplitude calculation      0.01 sec, wall time      0.00 sec
E_corr = -0.04924262

******** <class 'pyscf.adc.uadc.UADCIP'> ********
max_space = 5000
max_cycle = 1000
conv_tol = 1e-12
max_memory 4000 MB (current use 222 MB)
tol 1e-12  toloose 1e-06
max_cycle 1000  max_space 5003  max_memory 2000  incore True
DEBUG vve energy_thresh:  1000
    CPU time for completed sigma vector calculation      0.03 sec, wall time      0.00 sec
DEBUG vve energy_thresh:  1000
    CPU time for completed sigma vector calculation      0.03 sec, wall time      0.00 sec
davidson 0 2  |r|= 0.497  e= [0.26145321 0.26145321]  max|de|= 0.261  lindep=    1
DEBUG vve energy_thresh:  1000
    CPU time for completed sigma vector calculation      0.03 sec, wall time      0.00 sec
DEBUG vve energy_thresh:  1000
    CPU time for completed sigma vector calculation      0.03 sec, wall time      0.00 sec
Old state -> New state
    1     ->     0 
    0     ->     1 
davidson 1 4  |r|= 0.0533  e= [0.07195283 0.07195283]  max|de|= -0.19  lindep= 0.999
DEBUG vve energy_thresh:  1000
    CPU time for completed sigma vector calculation      0.03 sec, wall time      0.00 sec
DEBUG vve energy_thresh:  1000
    CPU time for completed sigma vector calculation      0.03 sec, wall time      0.00 sec
davidson 2 6  |r|= 0.0198  e= [0.06727581 0.06727582]  max|de|= -0.00468  lindep=    1
DEBUG vve energy_thresh:  1000
    CPU time for completed sigma vector calculation      0.03 sec, wall time      0.00 sec
DEBUG vve energy_thresh:  1000
    CPU time for completed sigma vector calculation      0.03 sec, wall time      0.00 sec
davidson 3 8  |r|= 0.00252  e= [0.06697111 0.06697111]  max|de|= -0.000305  lindep= 0.834
DEBUG vve energy_thresh:  1000
    CPU time for completed sigma vector calculation      0.03 sec, wall time      0.00 sec
DEBUG vve energy_thresh:  1000
    CPU time for completed sigma vector calculation      0.03 sec, wall time      0.00 sec
davidson 4 10  |r|= 0.000133  e= [0.0669694  0.06696941]  max|de|= -1.7e-06  lindep= 0.994
DEBUG vve energy_thresh:  1000
    CPU time for completed sigma vector calculation      0.03 sec, wall time      0.00 sec
DEBUG vve energy_thresh:  1000
    CPU time for completed sigma vector calculation      0.03 sec, wall time      0.00 sec
davidson 5 12  |r|= 1.63e-05  e= [0.0669694 0.0669694]  max|de|= -4.13e-09  lindep= 0.96
DEBUG vve energy_thresh:  1000
    CPU time for completed sigma vector calculation      0.03 sec, wall time      0.00 sec
DEBUG vve energy_thresh:  1000
    CPU time for completed sigma vector calculation      0.03 sec, wall time      0.00 sec
davidson 6 14  |r|= 1.88e-05  e= [0.0669694 0.0669694]  max|de|= -2.56e-10  lindep= 0.597
DEBUG vve energy_thresh:  1000
    CPU time for completed sigma vector calculation      0.03 sec, wall time      0.00 sec
DEBUG vve energy_thresh:  1000
    CPU time for completed sigma vector calculation      0.03 sec, wall time      0.00 sec
davidson 7 16  |r|= 0.0266  e= [0.06355155 0.06360545]  max|de|= -0.00342  lindep= 0.752
DEBUG vve energy_thresh:  1000
    CPU time for completed sigma vector calculation      0.03 sec, wall time      0.00 sec
DEBUG vve energy_thresh:  1000
    CPU time for completed sigma vector calculation      0.03 sec, wall time      0.00 sec
davidson 8 18  |r|= 0.00353  e= [0.06317303 0.06317331]  max|de|= -0.000432  lindep= 0.928
DEBUG vve energy_thresh:  1000
    CPU time for completed sigma vector calculation      0.03 sec, wall time      0.00 sec
DEBUG vve energy_thresh:  1000
    CPU time for completed sigma vector calculation      0.03 sec, wall time      0.00 sec
davidson 9 20  |r|= 0.000958  e= [0.0631727  0.06317289]  max|de|= -4.25e-07  lindep= 0.298
DEBUG vve energy_thresh:  1000
    CPU time for completed sigma vector calculation      0.03 sec, wall time      0.00 sec
DEBUG vve energy_thresh:  1000
    CPU time for completed sigma vector calculation      0.03 sec, wall time      0.00 sec
davidson 10 22  |r|= 0.00072  e= [0.0631727  0.06317281]  max|de|= -7.51e-08  lindep= 0.297
DEBUG vve energy_thresh:  1000
    CPU time for completed sigma vector calculation      0.04 sec, wall time      0.00 sec
DEBUG vve energy_thresh:  1000
    CPU time for completed sigma vector calculation      0.03 sec, wall time      0.00 sec
Old state -> New state
    1     ->     0 
    0     ->     1 
davidson 11 24  |r|= 2.31e-05  e= [0.0631727 0.0631727]  max|de|= -1.18e-07  lindep= 0.563
DEBUG vve energy_thresh:  1000
    CPU time for completed sigma vector calculation      0.04 sec, wall time      0.00 sec
DEBUG vve energy_thresh:  1000
    CPU time for completed sigma vector calculation      0.04 sec, wall time      0.00 sec
Throwing out eigenvector 0 with norm=4.56e-08
Throwing out eigenvector 1 with norm=1.38e-08
davidson 12 26  |r|= 4.56e-08  e= [0.0631727 0.0631727]  max|de|= -5.69e-11  lindep=    1
Linear dependency in trial subspace. |r| for each state [4.5596637608412835e-08, 1.377724283724559e-08]
